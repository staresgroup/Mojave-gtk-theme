// generic drawing of more complex things

// provide font size in pt, with px fallback
@function pt($size: $root-font-size) {
  @return ($size * 0.75 / 1px) + pt;
}

// provide icon size in em, with px fallback
@function em($size: 16px) {
  @return ($size / $root-font-size) + em;
}

// provide font size in rem, with px fallback
@mixin fontsize($size: 24, $base: 16) {
  font-size: round($size) + pt;
}

// Typography
// based on:
// https://material.io/guidelines/style/typography.html#typography-styles

@mixin font($size) {
  @if $size == display-4 {
    // font-family: $large-font-family;
    font-size: 112px;
    font-weight: 300;
    // line-height: 1;
  }

  @if $size == display-3 {
    // font-family: $large-font-family;
    font-size: 56px;
    font-weight: 400;
    // line-height: 1;
  }

  @if $size == display-2 {
    // font-family: $large-font-family;
    font-size: 45px;
    font-weight: 400;
    // line-height: 48px;
  }

  @if $size == display-1 {
    // font-family: $large-font-family;
    font-size: 34px;
    font-weight: 400;
    // line-height: 40px;
  }

  @if $size == headline {
    font-size: pt(24px);
    font-weight: 400;
    // line-height: 32px;
  }

  @if $size == title {
    font-size: pt(20px);
    font-weight: 500;
    // line-height: 1;
  }

  @if $size == subheading {
    font-size: pt($subheading-size);
    font-weight: 400;
    // line-height: 24px;
  }

  @if $size == body-2 {
    font-size: pt($root-font-size);
    font-weight: 500;
    // line-height: 24px;
  }

  @if $size == body-1 {
    font-size: pt($root-font-size);
    font-weight: 400;
    // line-height: 20px;
  }

  @if $size == caption {
    font-size: pt(12px);
    font-weight: 400;
    // line-height: 1;
  }

  @if $size == button {
    font-size: pt($root-font-size);
    font-weight: 500;
    // line-height: 20px;
  }
}


@mixin entry($t, $c: $fg_color, $fc: $primary_color) {
//
// entry
//
// $t: entry type
// $fc: focus color
//

  @if $t == normal {
    color: $c;
    background-color: if($variant == 'light', darken($base_color, 2%), darken($base_color, 1%));
    border-radius: $bd_radius;
    border: 2px solid transparent;
    box-shadow: inset 0 0 0 1px $borders_color;
  }

  @if $t == focus {
    color: $c;
    border: 2px solid lighten($fc, 15%);
    box-shadow: none;
  }

  @if $t == insensitive {
    color: rgba($c, 0.35);
    box-shadow: none;
  }
}

@mixin search_entry($t, $c: $fg_color) {
//
// search_entry
//
// $t: search_entry type
// $fc: focus color
//

  @if $t == normal {
    color: $c;
    background-color: rgba($c, 0.12);
    border-radius: $bd_radius;
    border-color: transparent;
    box-shadow: none;
  }

  @if $t == focus {
    color: $c;
    border-color: transparent;
    background-color: rgba($c, 0.18);
  }

  @if $t == hover {
    color: $c;
    background-color: rgba($c, 0.2);
    box-shadow: 1px 2px 3px rgba(black, 0.35);
  }

  @if $t == insensitive {
    color: rgba($c, 0.35);
    background-color: rgba($c, 0.05);
    box-shadow: none;
  }
}

@mixin button($t, $c: $base_color, $tc: $fg_color) {
//
// button
//
// $t: button type
// $c: base color
// $tc: text color
//

  @if $t == normal {
    color: $tc;
    background-color: $c;
    border: 1px solid $button_borders;

    text-shadow: none;
    icon-shadow: none;
  }

  @if $t == focus {
    color: $tc;
    text-shadow: none;
    icon-shadow: none;
  }

  @if $t == hover {
    color: $tc;
    border-color: $button_borders_hover;
    background-color: if($variant=='light', darken($c, 3%), lighten($c, 3%));
    text-shadow: none;
    icon-shadow: none;
  }

  @if $t == active {
    color: $light_fg_color;
    background-color: $primary_color;
    border-color: $button_borders_active;
    text-shadow: none;
    icon-shadow: none;
  }

  @if $t == insensitive {
    color: if($tc == $fg_color, $disabled_fg_color, $tc);
    background-color: if($c == $base_color, $divider_color, $c);
    border-color: if($variant == 'light', $button_border, $dark_borders_color);
    text-shadow: none;
    icon-shadow: none;
  }

  @if $t == flat-normal {
    color: if($tc != $light_fg_color, $alt_fg_color, $light_alt_fg_color);
    background-color: transparent;
    border-color: transparent;
    box-shadow: $shadow_0;
    text-shadow: none;
    icon-shadow: none;
  }

  @if $t == flat-focus {
    color: if($tc != $light_fg_color, $fg_color, $light_fg_color);
    text-shadow: none;
    icon-shadow: none;
    box-shadow: $shadow_0;
    // box-shadow: inset 0px 0px 0px 2px $divider_color;
  }

  @if $t == flat-hover {
    color: if($tc != $light_fg_color, $fg_color, $light_fg_color);
    background-color: if($tc != $light_fg_color, $divider_color, $light_divider_color);
    border-color: transparent;
    box-shadow: $shadow_0;
    text-shadow: none;
    icon-shadow: none;
  }

  @if $t == flat-active {
    color: if($tc != $light_fg_color, $fg_color, $light_fg_color);
    background-color: if($tc != $light_fg_color, $track_color, $light_track_color);
    border-color: transparent;
    box-shadow: $shadow_0;
    text-shadow: none;
    icon-shadow: none;
  }

  @if $t == flat-insensitive {
    color: if($tc != $light_fg_color, $disabled_fg_color, $light_alt_disabled_fg_color);
    background-color: transparent;
    border-color: transparent;
    box-shadow: $shadow_0;
    text-shadow: none;
    icon-shadow: none;
  }
}
